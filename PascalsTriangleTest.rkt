#lang racket
(require rackunit)
(require "PascalsTriangle.rkt")

(test-begin
 (check-exn exn:fail:contract? ( lambda () (getE 0 1) ))
 (check-exn exn:fail:contract? ( lambda () (getE 1 0) ))
 (check-exn exn:fail:contract? ( lambda () (getE 1 2) ))
 (check-eq? 1 (getE 1 1))
 (check-eq? 1 (getE 2 1))
 (check-eq? 1 (getE 2 2))
 (check-eq? 1 (getE 3 1))
 (check-eq? 2 (getE 3 2))
 (check-eq? 1 (getE 3 3))
 (check-eq? 1 (getE 4 1))
 (check-eq? 3 (getE 4 2))
 (check-eq? 3 (getE 4 3))
 (check-eq? 1 (getE 4 4))
 (check-eq? 1 (getE 5 1))
 (check-eq? 4 (getE 5 2))
 (check-eq? 6 (getE 5 3))
 (check-eq? 4 (getE 5 4))
 (check-eq? 1 (getE 5 5))
 (check-eq? 35 (getE 8 4)))